/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package seme1;

import java.awt.Color;
import java.util.Observable;
import java.util.Observer;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

/**
 *
 * @author knazik.michal
 */
public class GUI extends javax.swing.JFrame implements Observer, Runnable {

    /**
     * Creates new form NewJFrame
     */
    private ChartPanel panelGrafu;
    private XYSeriesCollection datasetA;
    private XYSeriesCollection datasetB;
    private Jadro strategiaA;
    private Jadro strategiaB;
    private XYSeries ciaraA;
    private XYSeries ciaraB;
    private XYPlot vysledok;
    private ValueAxis rangeAxisA;
    private ValueAxis rangeAxisB;

    public GUI() {
        initComponents();
        this.setSize(890, 430);
        
    }


    private void vykreslujGrafy() {
      
        this.datasetA = new XYSeriesCollection();
        this.datasetB = new XYSeriesCollection();
        this.ciaraA = new XYSeries("P(A)");
        this.ciaraB = new XYSeries("P(B)");

        datasetA.addSeries(ciaraA);
        datasetB.addSeries(ciaraB);

        JFreeChart graf = ChartFactory.createXYLineChart("Pravdepodobnost vyhry", "Pocet replikacii", "Pravdepodobnost vyhry", datasetA);
        panelGrafu = new ChartPanel(graf);
        vysledok = graf.getXYPlot();

        NumberAxis axis = new NumberAxis("Pravdepodobnost vyhry A");
        axis.setAutoRangeIncludesZero(true);
        vysledok.setRangeAxis(0, axis);
        vysledok.setDataset(0, datasetA);
        vysledok.mapDatasetToRangeAxis(0, 0);
        
       
        NumberAxis axis1 = new NumberAxis("Pravdepodobnost vyhry B");
        axis1.setAutoRangeIncludesZero(true);
        vysledok.setRangeAxis(1, axis1);
        vysledok.setDataset(1, datasetB);
        vysledok.mapDatasetToRangeAxis(1, 1);

        ValueAxis rangeAxis = vysledok.getRangeAxis(0);
        rangeAxis.setAutoRange(true);
        rangeAxis = vysledok.getRangeAxis(1);
        rangeAxis.setAutoRange(true);

        XYLineAndShapeRenderer splinerenderer = new XYLineAndShapeRenderer(true, false);
        splinerenderer.setSeriesFillPaint(0, Color.BLUE);
        vysledok.setRenderer(1, splinerenderer);

        NumberAxis numberAxis = (NumberAxis) vysledok.getRangeAxis(1);
        numberAxis.setAutoRangeIncludesZero(false);
        numberAxis = (NumberAxis) vysledok.getRangeAxis(0);
        numberAxis.setAutoRangeIncludesZero(false);

//        rangeAxisA = vysledok.getRangeAxis(0);
//        rangeAxisB = vysledok.getRangeAxis(1);
      
        jPanelChart.add(panelGrafu);
        panelGrafu.setSize(600, 365);
        jPanelChart.setVisible(true);
        panelGrafu.setVisible(true);
        jPanelChart.repaint();
        jPanelChart.validate();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPocetReplikacii = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPocetDveri = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jStrategiaA = new javax.swing.JCheckBox();
        jStrategiaB = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPVyhraA = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jPVyhraB = new javax.swing.JTextField();
        start = new javax.swing.JButton();
        stop = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jPreskoc = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jVykresliKazdu = new javax.swing.JTextField();
        jPanelChart = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPocetReplikacii.setText("1000");
        jPocetReplikacii.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPocetReplikaciiActionPerformed(evt);
            }
        });

        jLabel1.setText("Pocet replikacii:");

        jLabel7.setText("Simulacia:");

        jLabel2.setText("Pocet dveri:");

        jPocetDveri.setText("3");

        jLabel6.setText("Volba strategie:");

        jStrategiaA.setText("strategia A (rovnake dvere)");
        jStrategiaA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jStrategiaAActionPerformed(evt);
            }
        });

        jStrategiaB.setText("strategia B (zmena dveri)");
        jStrategiaB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jStrategiaBActionPerformed(evt);
            }
        });

        jLabel5.setText("Pravdepodobnost vyhry:");

        jLabel3.setText("P(strategia A)");

        jPVyhraA.setText("0");

        jLabel4.setText("P(strategia B)");

        jPVyhraB.setText("0");
        jPVyhraB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPVyhraBActionPerformed(evt);
            }
        });

        start.setText("Start");
        start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startActionPerformed(evt);
            }
        });

        stop.setText("Stop");
        stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopActionPerformed(evt);
            }
        });

        jLabel8.setText("Preskoc (%):");

        jPreskoc.setText("10");

        jLabel9.setText("Vykresli kazdu:");

        jVykresliKazdu.setText("150");
        jVykresliKazdu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jVykresliKazduActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))
                                .addGap(121, 121, 121))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                                    .addComponent(start, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jPocetDveri)
                                            .addComponent(jVykresliKazdu)
                                            .addComponent(jPreskoc)
                                            .addComponent(jPocetReplikacii, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel4)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jPVyhraB, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addGap(29, 29, 29)
                                                .addComponent(jPVyhraA, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addComponent(stop, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jStrategiaB, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jStrategiaA)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jPVyhraA, jPVyhraB});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPocetReplikacii, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPocetDveri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPreskoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jVykresliKazdu))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jStrategiaA)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jStrategiaB)
                .addGap(7, 7, 7)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPVyhraA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPVyhraB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(start)
                    .addComponent(stop))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jPVyhraA, jPVyhraB});

        javax.swing.GroupLayout jPanelChartLayout = new javax.swing.GroupLayout(jPanelChart);
        jPanelChart.setLayout(jPanelChartLayout);
        jPanelChartLayout.setHorizontalGroup(
            jPanelChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 608, Short.MAX_VALUE)
        );
        jPanelChartLayout.setVerticalGroup(
            jPanelChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 328, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanelChart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelChart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jStrategiaAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jStrategiaAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jStrategiaAActionPerformed

    private void jStrategiaBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jStrategiaBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jStrategiaBActionPerformed

    private void jPVyhraBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPVyhraBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPVyhraBActionPerformed

    private void jPocetReplikaciiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPocetReplikaciiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPocetReplikaciiActionPerformed

    private void startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startActionPerformed
        jPanelChart.repaint();
        this.startSimulacie();
    }//GEN-LAST:event_startActionPerformed

    public void startSimulacie() {
        jPVyhraA.setText("0");
        jPVyhraB.setText("0");

        if (jStrategiaA.isSelected()) {
            strategiaA = new Jadro(Integer.parseInt(jPocetReplikacii.getText()), Integer.parseInt(jPocetDveri.getText()), true);
            strategiaA.addObserver(this);
            Thread vlaknoA = new Thread(strategiaA);
            vlaknoA.start();

        }

        if (jStrategiaB.isSelected()) {
            strategiaB = new Jadro(Integer.parseInt(jPocetReplikacii.getText()), Integer.parseInt(jPocetDveri.getText()), false);
            strategiaB.addObserver(this);
            Thread vlaknoB = new Thread(strategiaB);
            vlaknoB.start();
        }

        Thread vlakno = new Thread(this);
        vlakno.start();

    }


    private void stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopActionPerformed
        this.stopSimulacie();
    }//GEN-LAST:event_stopActionPerformed

    private void jVykresliKazduActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jVykresliKazduActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jVykresliKazduActionPerformed

    public void stopSimulacie() {
        if (strategiaA != null) {
            strategiaA.setStop(true);
            jPVyhraA.setText(strategiaA.getStatistika().vratStatistiku(jStrategiaA.isSelected()) + "");
        }

        if (strategiaB != null) {
            strategiaB.setStop(true);
            jPVyhraB.setText(strategiaB.getStatistika().vratStatistiku(jStrategiaB.isSelected()) + "");
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jPVyhraA;
    private javax.swing.JTextField jPVyhraB;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelChart;
    private javax.swing.JTextField jPocetDveri;
    private javax.swing.JTextField jPocetReplikacii;
    private javax.swing.JTextField jPreskoc;
    private javax.swing.JCheckBox jStrategiaA;
    private javax.swing.JCheckBox jStrategiaB;
    private javax.swing.JTextField jVykresliKazdu;
    private javax.swing.JButton start;
    private javax.swing.JButton stop;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Observable o, Object arg) {
        int pocetPreskocit = 0;
        Statistika x = (Statistika) arg;
        
        if (x.isTypStrategie()) {
            jPVyhraA.setText(x.vratStatistiku(true) + "");
        } else {
            jPVyhraB.setText(x.vratStatistiku(false) + "");
        }
        
        if (jPreskoc.getText().equals("")) {
           pocetPreskocit = 0;
        } else{
           pocetPreskocit = Integer.parseInt(jPreskoc.getText());
        }            
            
        
        if ((double) (Integer.parseInt(jPocetReplikacii.getText()) * pocetPreskocit / 100) >= x.getAktualnaReplikacia()) {
            return;
        }

        if (x.getAktualnaReplikacia() % 100 != 0) {
            return;
        }

        if (x.isTypStrategie()) {
            ciaraA.add(x.getAktualnaReplikacia(), x.vratStatistiku(true));
        } else {
            ciaraB.add(x.getAktualnaReplikacia(), x.vratStatistiku(true));
        }

    }

    @Override
    public void run() {
        vykreslujGrafy();
    }

}
